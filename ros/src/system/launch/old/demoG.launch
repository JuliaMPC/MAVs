<?xml version="1.0"?>
<launch>
  <!-- demo of nloptcontrol_planner with chrono, vehicle_description and obstacle detector-->

  <!-- sim time setting -->
  <node name="ros_get_world_time_" pkg="get_world_time_test" type="ros_get_world_time" output="screen" />
  <!-- use sime time -->
  <param name="use_sim_time" value="true"/>

  <!--  ************* nloptcontrol_planner args and parameters ***************  -->
  <arg name="planner_params_path" default="$(find system)/config/planner/nloptcontrol_planner/default.yaml"/>
  <!--param name="planner_params_path" value="$(arg planner_params_path)"/-->
  <rosparam command="load" file="$(arg planner_params_path)" />

  <!--  ************* vehicle_description args and parameters ***************  -->
  <arg name="vehicle_params_path" default="$(find system)/config/vehicle/hmmwv.yaml"/>
  <arg name="gui" default="true"/>
  <!-- Use Chrono time-->
  <arg name="paused" default="true"/> <!-- NOTE this pause overrides system/flags/pause -->

  <rosparam command="load" file="$(arg vehicle_params_path)" />

  <!--  ************** common args and parameters ***************  -->
  <arg name="system_params_path" default="$(find system)/config/system/demos/demoG.yaml"/>
  <arg name="case_params_path" default="$(find system)/config/case/s1.yaml"/>
  <arg name="chrono_params_path" default="$(find ros_chrono)/config/hmmwv_chrono_params.yaml"/>

  <param name="system_params_path" value="$(arg system_params_path)"/>
  <param name="case_params_path" value="$(arg case_params_path)"/>

  <rosparam command="load" file="$(arg case_params_path)" />
  <rosparam command="load" file="$(arg system_params_path)" />
  <rosparam command="load" file="$(arg chrono_params_path)"/>

<!-- vehicle description -->
  <include file="$(find vehicle_description)/launch/main.launch">
    <arg name="system_params_path" value="$(arg system_params_path)"/>
    <arg name="vehicle_params_path" value="$(arg vehicle_params_path)"/>
    <arg name="case_params_path" value="$(arg case_params_path)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
  </include>

  <!-- launch chrono -->
  <arg name="path_follower" value="true" />
  <!--node name="Reference" pkg="traj_gen_chrono" type="traj_gen_chrono"/-->
  <node if="$(arg path_follower)" name="Chronode" pkg="ros_chrono" type="hmmwv_model" cwd="node"/>
  <node unless="$(arg path_follower)" name="Chronode" pkg="ros_chrono" type="trajectory_follower"
    cwd="node" output="screen" />


  <include file="$(find nloptcontrol_planner)/launch/demo.launch">
    <arg name="case_params_path" value="$(arg case_params_path)"/>
    <arg name="planner_params_path" value="$(arg planner_params_path)"/>
    <arg name="system_params_path" value="$(arg system_params_path)"/>
  </include>

  <!--  ************* obstacle_detector args and parameters ***************  -->
  <arg name="frame_id" default="velodyne_top_link" />
  <arg name="manager" default="$(arg frame_id)_nodelet_manager" />

  <include file="$(find obstacle_detector)/launch/obstacle_detector.launch">
    <arg name="frame_id" value="$(arg frame_id)" />
    <arg name="manager" value="$(arg manager)" />
  </include>

  <param name="obstacle_detector/obstacle_tracker/tracking_duration" type="double" value="0.5" />
  <param name="obstacle_detector/obstacle_tracker/loop_rate" type="double" value="1000" />

  <!-- initialize system -->
  <node name="bootstrap" pkg="system" type="bootstrap.jl" output="screen"/>


</launch>
