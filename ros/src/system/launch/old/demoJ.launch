<?xml version="1.0"?>

<launch>

  <!-- Demo to show vechicle state visualizatrion (actual and estimated) from nlopcontrol_planner
     WARN: To run this demo make sure to set system/shutdown/flags/running: false in system/config/system/pkgs/nloptcontrol_planner.yaml
    OR: Add shutdown node to this launch file, which will close the plots automatically as the goal is achieved -->

  <arg name="case_params_path" default="$(find system)/config/case/s1.yaml"/>
  <arg name="planner_params_path" default="$(find system)/config/planner/nloptcontrol_planner/default.yaml"/>
  <arg name="system_params_path" default="$(find system)/config/system/demoJ.yaml"/>
  <arg name="vehicle_params_path" default="$(find system)/config/vehicle/hmmwv.yaml"/>

  <param name="case_params_path" value="$(arg case_params_path)"/>
  <param name="planner_params_path" value="$(arg planner_params_path)"/>
  <param name="system_params_path" value="$(arg system_params_path)"/>
  <param name="vehicle_params_path" value="$(arg vehicle_params_path)"/>

  <rosparam command="load" file="$(arg case_params_path)" />
  <rosparam command="load" file="$(arg planner_params_path)" />
  <rosparam command="load" file="$(arg system_params_path)" />
  <rosparam command="load" file="$(arg vehicle_params_path)" />

  <!-- Obstacle Avoidance-->
  <node name="obstacle_avoidance" pkg="nloptcontrol_planner" type="obstacle_avoidance.jl" output="screen"/>

  <!-- initialize system -->
  <node name="bootstrap" pkg="system" type="bootstrap.jl" output="screen"/>

  <!-- Run the visualization node, this node starts only after system/flags/initialized becomes True
  So make sure to initilize this parameter in your code -->
  <node name="visualization" pkg="visualization" type="start.sh" />

</launch>
